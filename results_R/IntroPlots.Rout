
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #computes descriptive plots.
> # outputs: figs/menwomen.pdf, figs/regions.pdf, figs/aggIndComp.pdf, weightsTop10comp.pdf, figs/weightsDiverse.pdf, figs/weightsTime.pdf,figs/weightsCPS78.pdf
> 
> 
> 
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.3.5     ✔ purrr   0.3.4
✔ tibble  3.1.7     ✔ dplyr   1.0.7
✔ tidyr   1.1.4     ✔ stringr 1.4.0
✔ readr   2.0.2     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Warning message:
package ‘tibble’ was built under R version 4.1.2 
> library(zoo)

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> library(gridExtra)

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> library(fredr) 
> library(ggplot2)
> library(bartik.weight)
> library(fixest)
Warning message:
package ‘fixest’ was built under R version 4.1.2 
> library(modelsummary)
> library(ggstream)
> library(viridis)
Loading required package: viridisLite
> library(latex2exp)
Warning message:
package ‘latex2exp’ was built under R version 4.1.2 
> 
> 
> 
> setwd("~/Dropbox/Cloud/Research/panel expectations/make-panelexpects")
> 
> michigan <- read_csv("data/Michigan_220524.csv")
Rows: 303710 Columns: 111
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (111): CASEID, YYYYMM, YYYYQ, YYYY, ID, IDPREV, DATEPR, ICS, ICC, ICE, P...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> region_data <- read_csv("data/dataBuild/regiondata.csv")
Rows: 116701 Columns: 5
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl  (4): REGION, industry, n, prop
date (1): survey_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> local_dataBig_Small <- read_csv("data/dataBuild/localdataBigSmall.csv")
Rows: 272760 Columns: 113
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl  (112): CASEID, YYYYMM, YYYYQ, YYYY, ID, IDPREV, DATEPR, ICS, ICC, ICE, ...
date   (1): survey_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> # Remove n/a's and fix date format;
> 
> michigan <- michigan %>%
+   mutate(survey_date = as.Date(paste0(michigan[["YYYYMM"]],01), format = "%Y%m%d")) %>%
+   filter(PX1<96) %>%
+   filter(PX1!=-97) %>%
+   filter(PX1 %in% (-25:25))
> 
> paneldata <-  read_csv("data/dataBuild/paneldata.csv") %>%
+   mutate(year = format(survey_date, "%Y"), yearquarter = as.yearqtr(survey_date, format = "%Y-%m-%d")) %>%
+   panel(~REGION + survey_date)
Rows: 2124 Columns: 15
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl  (14): REGION, pe, RegInf, Bartik, UNRATE, AggUNRATE, ye, gasExp, FinBet...
date  (1): survey_date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> master_dataGender <- michigan %>%
+   group_by(SEX,survey_date) %>%
+   summarise(pe = mean(PX1, na.rm = TRUE))
`summarise()` has grouped output by 'SEX'. You can override using the `.groups` argument.
> master_dataGender <- master_dataGender[c("survey_date", "pe", "SEX")] %>%
+   filter(!is.na(pe), !is.na(SEX))
> 
> master_dataRegion <- michigan %>%
+   group_by(REGION, survey_date) %>%
+   summarise(pe = mean(PX1, na.rm = TRUE)) %>%
+   filter(!is.na(pe), !is.na(REGION))
`summarise()` has grouped output by 'REGION'. You can override using the `.groups` argument.
>   
> Gender_alt <- master_dataGender %>% mutate(SEX = as.character(SEX))
> 
> Region_alt <- master_dataRegion %>%
+   group_by(survey_date, REGION) %>%
+   summarise(n = sum(pe), pe = pe) %>%
+   mutate( percentage = n/sum(n), REGION = as.character(REGION)) %>%
+   filter(percentage>0)
`summarise()` has grouped output by 'survey_date'. You can override using the `.groups` argument.
> 
> Industry <- local_dataBig_Small %>%
+   select(c("survey_date", "PX1", "industry")) %>%
+   filter(industry %in% c(5,41,21,37,90,134,81,141,85,62)) %>%
+   group_by(industry, survey_date) %>%
+   summarise( pe = mean(PX1, na.rm = TRUE)) %>%
+   mutate(industry = as.character(industry))
`summarise()` has grouped output by 'industry'. You can override using the `.groups` argument.
> 
> AllIndustry  <- local_dataBig_Small %>%
+   select(c("survey_date", "PX1", "industry")) %>%
+   filter(!(industry %in% c(148,149))) %>%
+   group_by(industry, survey_date) %>%
+   summarise( pe = mean(PX1, na.rm = TRUE)) %>%
+   mutate(industry = as.character(industry))
`summarise()` has grouped output by 'industry'. You can override using the `.groups` argument.
>          
> 
> # men/women comparison.
> tikz(file = "figs/tex/menwomen.tex", engine = "xetex", height = 3, width = 6.5)
Error in tikz(file = "figs/tex/menwomen.tex", engine = "xetex", height = 3,  : 
  could not find function "tikz"
Execution halted
